<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>CSFML - C binding of the Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"/>
        <!--<link rel='stylesheet' type='text/css' href="http://fonts.googleapis.com/css?family=Ubuntu:400,700,400italic"/>-->
        <link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
    </head>
    <body>
        <div id="banner-container">
            <div id="banner">
                <span id="sfml">CSFML</span>
            </div>
        </div>
        <div id="content">
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.htm"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>Globals</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_0a27442737f4265ac04a893208d87e6d.htm">include</a></li><li class="navelem"><a class="el" href="dir_7b5aec695d1cde55d7a6a981f0285299.htm">SFML</a></li><li class="navelem"><a class="el" href="dir_e7d850e9ba9cab14d1c525de2eae33f6.htm">Window</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">VideoMode.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="Window_2Export_8h_source.htm">SFML/Window/Export.h</a>&gt;</code><br />
<code>#include &lt;stddef.h&gt;</code><br />
</div>
<p><a href="VideoMode_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsfVideoMode.htm">sfVideoMode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="structsfVideoMode.htm" title="sfVideoMode defines a video mode (width, height, bpp, frequency) and provides functions for getting m...">sfVideoMode</a> defines a video mode (width, height, bpp, frequency) and provides functions for getting modes supported by the display device  <a href="structsfVideoMode.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a36e66ffd586cf4b7702306f8443675b9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="Window_2Export_8h.htm#a2a95377e5ef218e2ae20060811a37b26">CSFML_WINDOW_API</a> <a class="el" href="structsfVideoMode.htm">sfVideoMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="VideoMode_8h.htm#a36e66ffd586cf4b7702306f8443675b9">sfVideoMode_getDesktopMode</a> (void)</td></tr>
<tr class="memdesc:a36e66ffd586cf4b7702306f8443675b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current desktop video mode.  <a href="#a36e66ffd586cf4b7702306f8443675b9">More...</a><br /></td></tr>
<tr class="separator:a36e66ffd586cf4b7702306f8443675b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a974de07cb377e7ab5b51a0912edcdda1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="Window_2Export_8h.htm#a2a95377e5ef218e2ae20060811a37b26">CSFML_WINDOW_API</a> const <br class="typebreak" />
<a class="el" href="structsfVideoMode.htm">sfVideoMode</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="VideoMode_8h.htm#a974de07cb377e7ab5b51a0912edcdda1">sfVideoMode_getFullscreenModes</a> (size_t *Count)</td></tr>
<tr class="memdesc:a974de07cb377e7ab5b51a0912edcdda1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve all the video modes supported in fullscreen mode.  <a href="#a974de07cb377e7ab5b51a0912edcdda1">More...</a><br /></td></tr>
<tr class="separator:a974de07cb377e7ab5b51a0912edcdda1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e2ed0c0b86aec06995bb9ca0e61845f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="Window_2Export_8h.htm#a2a95377e5ef218e2ae20060811a37b26">CSFML_WINDOW_API</a> <a class="el" href="Config_8h.htm#a7559f07a31bb3a4a3d865178ce4dc70b">sfBool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="VideoMode_8h.htm#a4e2ed0c0b86aec06995bb9ca0e61845f">sfVideoMode_isValid</a> (<a class="el" href="structsfVideoMode.htm">sfVideoMode</a> mode)</td></tr>
<tr class="memdesc:a4e2ed0c0b86aec06995bb9ca0e61845f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tell whether or not a video mode is valid.  <a href="#a4e2ed0c0b86aec06995bb9ca0e61845f">More...</a><br /></td></tr>
<tr class="separator:a4e2ed0c0b86aec06995bb9ca0e61845f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a36e66ffd586cf4b7702306f8443675b9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="Window_2Export_8h.htm#a2a95377e5ef218e2ae20060811a37b26">CSFML_WINDOW_API</a> <a class="el" href="structsfVideoMode.htm">sfVideoMode</a> sfVideoMode_getDesktopMode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the current desktop video mode. </p>
<dl class="section return"><dt>Returns</dt><dd>Current desktop video mode </dd></dl>

</div>
</div>
<a class="anchor" id="a974de07cb377e7ab5b51a0912edcdda1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="Window_2Export_8h.htm#a2a95377e5ef218e2ae20060811a37b26">CSFML_WINDOW_API</a> const <a class="el" href="structsfVideoMode.htm">sfVideoMode</a>* sfVideoMode_getFullscreenModes </td>
          <td>(</td>
          <td class="paramtype">size_t *&#160;</td>
          <td class="paramname"><em>Count</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieve all the video modes supported in fullscreen mode. </p>
<p>When creating a fullscreen window, the video mode is restricted to be compatible with what the graphics driver and monitor support. This function returns the complete list of all video modes that can be used in fullscreen mode. The returned array is sorted from best to worst, so that the first element will always give the best mode (higher width, height and bits-per-pixel).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">count</td><td>Pointer to a variable that will be filled with the number of modes in the array</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Pointer to an array containing all the supported fullscreen modes </dd></dl>

</div>
</div>
<a class="anchor" id="a4e2ed0c0b86aec06995bb9ca0e61845f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="Window_2Export_8h.htm#a2a95377e5ef218e2ae20060811a37b26">CSFML_WINDOW_API</a> <a class="el" href="Config_8h.htm#a7559f07a31bb3a4a3d865178ce4dc70b">sfBool</a> sfVideoMode_isValid </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structsfVideoMode.htm">sfVideoMode</a>&#160;</td>
          <td class="paramname"><em>mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tell whether or not a video mode is valid. </p>
<p>The validity of video modes is only relevant when using fullscreen windows; otherwise any video mode can be used with no restriction.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mode</td><td>Video mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>sfTrue if the video mode is valid for fullscreen mode </dd></dl>

</div>
</div>
</div><!-- contents -->
        </div>
        <div id="footer-container">
            <div id="footer">
                Copyright © Laurent Gomila &nbsp;::&nbsp;
                Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen</a> &nbsp;::&nbsp;
            </div>
        </div>
    </body>
</html>
